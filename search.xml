<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LowDB 使用文档</title>
    <url>/blog/2022/04/12/LowDB%20%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<blockquote>
<p>lowdb 是基于<a href="https://lodash.com/docs">lodash</a>构建的，因此我们可以使用任何 lodash 强大的函数。并且我们可以串联使用。</p>
</blockquote>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入 LowDB</span></span><br><span class="line"><span class="comment">// 遇到引用问题请降级，使用 1.0.0 或 2.X.X 再试</span></span><br><span class="line"><span class="keyword">const</span> lowdb = <span class="built_in">require</span>(<span class="string">&quot;lowdb&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileSync</span> = <span class="built_in">require</span>(<span class="string">&quot;lowdb/adapters/FileSync&quot;</span>);</span><br><span class="line"><span class="comment">// const lowdb = import(&#x27;lowdb&#x27;)</span></span><br><span class="line"><span class="comment">// const FileSync = import(&#x27;lowdb/adapters/FileSync&#x27;)</span></span><br><span class="line"><span class="comment">// import lowdb from &#x27;lowdb&#x27;</span></span><br><span class="line"><span class="comment">// import FileSync from &#x27;lowdb/adapters/FileSync&#x27;</span></span><br><span class="line"><span class="keyword">const</span> adapter = <span class="keyword">new</span> <span class="title class_">FileSync</span>(<span class="string">&quot;./db.json&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> db = <span class="title function_">lowdb</span>(adapter);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置默认数据结构 (如果你的 JSON 文件为空)</span></span><br><span class="line"><span class="comment">// 推荐设置，不设置的话如果是新的 json 文件,或者变更了结构,会报错</span></span><br><span class="line">db.<span class="title function_">defaults</span>(&#123; <span class="attr">servers</span>: [] &#125;).<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`清理过期缓存`</span>);</span><br><span class="line"><span class="comment">// (p) =&gt; p.activityEndTime &lt; new Date().getTime() 高级查询写法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量删除</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;servers&quot;</span>)</span><br><span class="line">  .<span class="title function_">remove</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> p.<span class="property">activityEndTime</span> &lt; <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>())</span><br><span class="line">  .<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询多条</span></span><br><span class="line"><span class="keyword">var</span> value = db</span><br><span class="line">  .<span class="title function_">get</span>(<span class="string">&quot;servers&quot;</span>)</span><br><span class="line">  .<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> p.<span class="property">activityEndTime</span> &lt; nowTime.<span class="title function_">getTime</span>())</span><br><span class="line">  .<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询单条</span></span><br><span class="line"><span class="keyword">var</span> value = db</span><br><span class="line">  .<span class="title function_">get</span>(<span class="string">&quot;servers&quot;</span>)</span><br><span class="line">  .<span class="title function_">find</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> p.<span class="property">activityEndTime</span> === nowTime.<span class="title function_">getTime</span>())</span><br><span class="line">  .<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 另一种匹配方式，单条</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;servers&quot;</span>).<span class="title function_">filter</span>(&#123; <span class="attr">activityEndTime</span>: nowTime.<span class="title function_">getTime</span>() &#125;).<span class="title function_">value</span>();</span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;servers&quot;</span>).<span class="title function_">find</span>(&#123; <span class="attr">activityEndTime</span>: nowTime.<span class="title function_">getTime</span>() &#125;).<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序和取前X条</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;servers&quot;</span>)</span><br><span class="line">  .<span class="title function_">filter</span>(&#123; <span class="attr">activityEndTime</span>: nowTime.<span class="title function_">getTime</span>() &#125;)</span><br><span class="line">  .<span class="title function_">sortBy</span>(<span class="string">&quot;activityEndTime&quot;</span>)</span><br><span class="line">  .<span class="title function_">take</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取数量</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">size</span>().<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取指定行的指定列数据</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts[0].title&quot;</span>).<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询并更新，assign方法能找到列字段则更新，找不到则新增列并写入</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">find</span>(&#123; <span class="attr">title</span>: <span class="string">&quot;low!&quot;</span> &#125;).<span class="title function_">assign</span>(&#123; <span class="attr">title</span>: <span class="string">&quot;hi!&quot;</span> &#125;).<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除一行</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">remove</span>(&#123; <span class="attr">title</span>: <span class="string">&quot;low!&quot;</span> &#125;).<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除属性（列）</span></span><br><span class="line">db.<span class="title function_">unset</span>(<span class="string">&quot;user.name&quot;</span>).<span class="title function_">write</span>();</span><br><span class="line"><span class="comment">// 深度克隆</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">cloneDeep</span>().<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 表是否存在</span></span><br><span class="line">db.<span class="title function_">has</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置数据</span></span><br><span class="line">db.<span class="title function_">set</span>(<span class="string">&quot;user.name&quot;</span>, <span class="string">&quot;kongzhi&quot;</span>).<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// get 数据, 然后添加一行数据进去，最后写入文档里面去。</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">push</span>(&#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">&quot;welcome to hangzhou&quot;</span> &#125;).<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 update 更新数据</span></span><br><span class="line">db.<span class="title function_">update</span>(<span class="string">&quot;count&quot;</span>, <span class="function">(<span class="params">n</span>) =&gt;</span> n + <span class="number">1</span>).<span class="title function_">write</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 mixin 混合模式来扩展我们自己的方法</span></span><br><span class="line">db.<span class="property">_</span>.<span class="title function_">mixin</span>(&#123;</span><br><span class="line">  <span class="attr">getSecondData</span>: <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// 返回第二行</span></span><br><span class="line">    <span class="keyword">return</span> arr[<span class="number">1</span>];</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 调用 getSecondData 方法 获取到 posts 第二条数据</span></span><br><span class="line"><span class="keyword">const</span> xx = db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">getSecondData</span>().<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取特定字段值数组</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts&quot;</span>).<span class="title function_">map</span>(<span class="string">&quot;id&quot;</span>).<span class="title function_">value</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 另一种取指定数据</span></span><br><span class="line">db.<span class="title function_">get</span>(<span class="string">&quot;posts[0].id&quot;</span>).<span class="title function_">value</span>();</span><br></pre></td></tr></table></figure>

<p>部分参考：<br><a href="https://www.cnblogs.com/tugenhua0707/p/11403202.html">https://www.cnblogs.com/tugenhua0707/p/11403202.html</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>前端备忘</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>LowDB</tag>
        <tag>数据持久化</tag>
      </tags>
  </entry>
  <entry>
    <title>Charles 注册、 SSL 与 Android</title>
    <url>/blog/2022/04/12/Charles%20%E6%B3%A8%E5%86%8C%E3%80%81%20SSL%20%E4%B8%8E%20Android/</url>
    <content><![CDATA[<p>在这个全面 https 的时代，抓包工具注定绕不开与 SSL 相关的配置，特别是移动端的 app 抓包。<br>直入正题，首先点击 Help - SSL Proxying - Install Charles Root Certificate 安装证书。导入时选择存储到 本地计算机 - 手动浏览 选择 受信任的根证书颁发机构 。<br>然后在 Proxy 菜单中查看是否启用 Windows Proxy 。点击 SSL Proxying Settings… ，勾选 Enable SSL Proxying ， 并将 需要抓包的域名 加入 Include （支持通配符，如 *.qq.com，端口可以不填）。<br>最后检查 Proxy Settings 是否配置，勾选 Support HTTP&#x2F;2 和 Enable transparent HTTP proxying。<br>在未完成上面的配置前，遇到过两个错误，</p>
<ol>
<li>SSL Proxying not enabled for this host: enable in Proxy Settings, SSL locations</li>
<li>You may need to configure your browser or application to trust the Charles Root Certificate. See SSL Proxying in the Help menu.</li>
</ol>
<p>第一个问题是因为未将域名 加入 Include 。<br>第二个问题是因为未在本机安装证书。<br>以上就是我的全部配置，Charles 版本是 4.6.2。<br>下面的东西不多说，懂得都懂。<br>Registered Name: <a href="https://zhile.io/">https://zhile.io</a><br>License Key: 48891cf209c6d32bf4</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>工具使用</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/blog/2022/04/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>新的篇章</title>
    <url>/blog/2022/04/11/%E6%96%B0%E7%9A%84%E7%AF%87%E7%AB%A0/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
